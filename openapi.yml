openapi: "3.0.2"
info:
  title: Boost Request Bot
  version: "1.0"
servers:
  - url: https://boostrequestbot.oppzippy.com/v1
  - url: http://localhost:8080
paths:
  /users/{userId}/stealCredits:
    get:
      operationId: getUserStealCredits
      tags:
        - users
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User's discord id
      responses:
        "200":
          description: Number of boost request steal credits available to the user in a JSON object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserStealCredits"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
    patch:
      operationId: updateUserStealCredits
      tags:
        - users
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User's discord id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchStealCreditsRequest"
        required: true
      responses:
        "200":
          description: New number of boost request steal credits available to the user in a JSON object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserStealCredits"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /boostRequests:
    post:
      operationId: createBoostRequest
      tags:
        - boostRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBoostRequestsRequest"
      responses:
        "200":
          description: The boost request was successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoostRequest"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /boostRequests/{boostRequestId}:
    get:
      operationId: getBoostRequest
      tags:
        - boostRequests
      parameters:
        - in: path
          name: boostRequestId
          schema:
            type: string
            format: uuid
          required: true
          description: Boost request UUID
      responses:
        "200":
          description: The boost request exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoostRequest"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  responses:
    OK:
      description: The action has been exectuted successfully.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericResponse"
    BadRequestError:
      description: The request schema is invalid.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    UnauthorizedError:
      description: API key is invalid.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFoundError:
      description: The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    GenericResponse:
      description: Default response when an action was completed but no more information is provided.
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code.
        message:
          type: string
          description: Description of what went wrong.
      required:
        - statusCode
        - message
    ErrorResponse:
      description: Error response.
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code.
        error:
          type: string
          description: Name of HTTP status code.
        message:
          type: string
          description: Description of what went wrong.
      required:
        - statusCode
        - error
        - message
    UserStealCredits:
      description: Number of boost request steal credits available to a user in a Discord guild.
      type: object
      properties:
        guildId:
          type: string
          description: Discord guild id in which the credits are used.
        userId:
          type: string
          description: User's discord id.
        credits:
          type: integer
          description: Number of boost request credits available to the user.
      required:
        - guildId
        - userId
        - credits
    PatchStealCreditsRequest:
      type: object
      properties:
        credits:
          type: integer
        operation:
          type: string
          enum:
            - "+"
            - "-"
            - "*"
            - "/"
            - "="
      required:
        - credits
        - operation
    PostBoostRequestsRequest:
      type: object
      properties:
        requesterId:
          type: string
          description: Discord user id of the request of the boost request.
        backendChannelId:
          type: string
          description: Discord channel id to post the boost request signup message in.
        message:
          type: string
          description: What is being requested
        price:
          type: string
          format: int64
          description: Price of the boost request in copper. This is a 64 bit integer represented as a string.
        advertiserCut:
          type: string
          format: int64
          description: Advertiser's cut for the boost request in copper. This is a 64 bit integer represented as a string.
        advertiserRoleCuts:
          type: object
          description: Keys are role ids, values are cuts. If an advertiser has more than one listed role, the role with the highest cut will be used. If the advertiser has none of the provided roles, the cut will fall back to advertiserCut if that was provided.
          additionalProperties:
            type: string
            format: int64
        discount:
          type: string
          format: int64
          description: Discount coming out of the advertiser's cut on the boost request in copper. This is a 64 bit integer represented as a string.
        preferredAdvertiserIds:
          type: array
          items:
            type: string
          description: If provided, only advertisers listed here will be eligible to accept the boost request.
      required:
        - requesterId
        - backendChannelId
        - message
    BoostRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        requesterId:
          type: string
          description: Discord user id of the request of the boost request.
        isAdvertiserSelected:
          type: boolean
        backendChannelId:
          type: string
          description: Discord channel id that the boost request signup message was posted in.
        backendMessageId:
          type: string
          description: Discord message id of the boost request signup message.
        message:
          type: string
          description: What is being requested
        price:
          type: string
          format: int64
          description: Price of the boost request in copper. This is a 64 bit integer represented as a string.
        discount:
          type: string
          format: int64
          description: Discount in copper on the boost.
        advertiserCut:
          type: string
          format: int64
          description: Advertiser's cut for the boost request in copper. This is a 64 bit integer represented as a string.
        advertiserRoleCuts:
          type: object
          description: Keys are role ids, values are cuts. If an advertiser has more than one listed role, the role with the highest cut will be used. If the advertiser has none of the provided roles, the cut will fall back to advertiserCut if that was provided.
          additionalProperties:
            type: string
            format: int64
        preferredAdvertiserIds:
          type: array
          items:
            type: string
          description: If preferredAdvertiserIds is defined, only advertisers listed here will be eligible to accept the boost request.
        createdAt:
          type: string
          format: date-time
        advertiserSelectedAt:
          type: string
          format: date-time
      required:
        - id
        - requesterId
        - isAdvertiserSelected
        - backendChannelId
        - backendMessageId
        - message
        - createdAt

security:
  - ApiKeyAuth: []
