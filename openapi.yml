openapi: "3.0.2"
info:
  title: Boost Request Bot
  version: "3.0"
servers:
  - url: https://boostrequestbot.oppzippy.com/v3
  - url: http://localhost:8080/v3
paths:
  /users/{userId}/stealCredits:
    get:
      operationId: getUserStealCredits
      tags:
        - users
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User's discord id
      responses:
        "200":
          description: Number of boost request steal credits available to the user in a JSON object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserStealCredits"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
    patch:
      operationId: updateUserStealCredits
      tags:
        - users
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User's discord id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchStealCreditsRequest"
        required: true
      responses:
        "200":
          description: New number of boost request steal credits available to the user in a JSON object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserStealCredits"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /boostRequests:
    post:
      operationId: createBoostRequest
      tags:
        - boostRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoostRequestPartial"
      responses:
        "200":
          description: The boost request was successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoostRequest"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /boostRequests/{boostRequestId}:
    get:
      operationId: getBoostRequest
      tags:
        - boostRequests
      parameters:
        - in: path
          name: boostRequestId
          schema:
            type: string
            format: uuid
          required: true
          description: Boost request UUID
      responses:
        "200":
          description: The boost request exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoostRequest"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  responses:
    OK:
      description: The action has been executed successfully.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GenericResponse"
    BadRequestError:
      description: The request schema is invalid.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    UnauthorizedError:
      description: API key is invalid.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFoundError:
      description: The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    GenericResponse:
      description: Default response when an action was completed but no more information is provided.
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code.
        message:
          type: string
          description: Description of what went wrong.
      required:
        - statusCode
        - message
    ErrorResponse:
      description: Error response.
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code.
        error:
          type: string
          description: Name of HTTP status code.
        message:
          type: string
          description: Description of what went wrong.
      required:
        - statusCode
        - error
        - message
    DetailedErrorResponse:
      description: Error response.
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code.
        error:
          type: string
          description: Name of HTTP status code.
        details:
          type: object
          description: Description of what went wrong.
      required:
        - statusCode
        - error
        - details
    UserStealCredits:
      description: Number of boost request steal credits available to a user in a Discord guild.
      type: object
      properties:
        guildId:
          type: string
          description: Discord guild id in which the credits are used.
        userId:
          type: string
          description: User's discord id.
        credits:
          type: integer
          description: Number of boost request credits available to the user.
      required:
        - guildId
        - userId
        - credits
    PatchStealCreditsRequest:
      type: object
      properties:
        credits:
          type: integer
        operation:
          type: string
          enum:
            - "+"
            - "-"
            - "*"
            - "/"
            - "="
      required:
        - credits
        - operation
    BoostRequestPartial:
      type: object
      properties:
        requesterId:
          type: string
          description: Discord user id of the request of the boost request.
        backendChannelId:
          type: string
          description: Discord channel id to post the boost request signup message in. If exactly one preferred claimer is set, the message will go to the preferred claimer's DMs instead. If the preferred claimer is then removed, the boost request will be reposted in this channel.
        message:
          type: string
          description: What is being requested
        price:
          type: string
          format: int64
          minimum: 0
          exclusiveMinimum: true
          description: Price of the boost request in copper. This is a 64 bit integer represented as a string.
        preferredClaimerIds:
          type: array
          items:
            type: string
          description: If provided, only claimers listed here will be eligible to accept the boost request.
        additionalEmbedFields:
          type: array
          description: Extra message embed fields to be added onto the end of the boost request.
          items:
            $ref: "#/components/schemas/EmbedField"
      required:
        - requesterId
        - backendChannelId
        - message
    BoostRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        requesterId:
          type: string
          description: Discord user id of the request of the boost request.
        backendChannelId:
          type: string
          description: Discord channel id to post the boost request signup message in. If exactly one preferred claimer is set, the message will go to the preferred claimer's DMs instead. If the preferred claimer is then removed, the boost request will be reposted in this channel.
        isClaimerSelected:
          type: boolean
        message:
          type: string
          description: What is being requested
        price:
          type: string
          format: int64
          minimum: 0
          exclusiveMinimum: true
          description: Price of the boost request in copper. This is a 64 bit integer represented as a string.
        preferredClaimerIds:
          type: array
          items:
            type: string
          description: If preferredClaimerIds is defined, only claimers listed here will be eligible to accept the boost request.
        additionalEmbedFields:
          type: array
          description: Extra message embed fields to be added onto the end of the boost request.
          items:
            $ref: "#/components/schemas/EmbedField"
        createdAt:
          type: string
          format: date-time
        claimerSelectedAt:
          type: string
          format: date-time
      required:
        - id
        - requesterId
        - isClaimerSelected
        - backendChannelId
        - message
        - createdAt
    EmbedField:
      type: object
      properties:
        name:
          type: string
          maxLength: 256
        value:
          type: string
          maxLength: 1024
        inline:
          type: boolean
      required:
        - name
        - value
security:
  - ApiKeyAuth: []
