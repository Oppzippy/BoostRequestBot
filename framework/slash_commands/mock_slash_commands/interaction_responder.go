// Code generated by MockGen. DO NOT EDIT.
// Source: interaction_responder.go

// Package mock_slash_commands is a generated GoMock package.
package mock_slash_commands

import (
	reflect "reflect"

	discordgo "github.com/bwmarrin/discordgo"
	gomock "github.com/golang/mock/gomock"
)

// MockInteractionResponder is a mock of InteractionResponder interface.
type MockInteractionResponder struct {
	ctrl     *gomock.Controller
	recorder *MockInteractionResponderMockRecorder
}

// MockInteractionResponderMockRecorder is the mock recorder for MockInteractionResponder.
type MockInteractionResponderMockRecorder struct {
	mock *MockInteractionResponder
}

// NewMockInteractionResponder creates a new mock instance.
func NewMockInteractionResponder(ctrl *gomock.Controller) *MockInteractionResponder {
	mock := &MockInteractionResponder{ctrl: ctrl}
	mock.recorder = &MockInteractionResponderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInteractionResponder) EXPECT() *MockInteractionResponderMockRecorder {
	return m.recorder
}

// InteractionRespond mocks base method.
func (m *MockInteractionResponder) InteractionRespond(interaction *discordgo.Interaction, resp *discordgo.InteractionResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InteractionRespond", interaction, resp)
	ret0, _ := ret[0].(error)
	return ret0
}

// InteractionRespond indicates an expected call of InteractionRespond.
func (mr *MockInteractionResponderMockRecorder) InteractionRespond(interaction, resp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InteractionRespond", reflect.TypeOf((*MockInteractionResponder)(nil).InteractionRespond), interaction, resp)
}
